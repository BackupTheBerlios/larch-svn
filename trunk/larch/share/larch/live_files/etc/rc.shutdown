#!/bin/bash
#
# /etc/rc.shutdown
#
# 2007.12.08

# Added for larch, so that /etc, /lib and /bin (and /usr) are not busy
# when the unions are unmounted. These files shold not be in one of the
# union mounts.
cp /etc/rc.shutdown2 /
cp /etc/rc.shutdown3 /

. /etc/rc.conf
. /etc/rc.d/functions

# avoid staircase effect
/bin/stty onlcr

echo " "
printhl "Initiating Shutdown..."
echo " "

# avoid NIS hanging syslog-ng on shutdown by unsetting the domainname
if [ -x /bin/domainname ]; then
    /bin/domainname ""
fi

if [ -x /etc/rc.local.shutdown ]; then
    /etc/rc.local.shutdown
fi

if [ "$PREVLEVEL" = "3" -o "$PREVLEVEL" = "5" ]; then
    # Shutdown daemons
    let i=${#DAEMONS[@]}
    while [[ i -ge 0 ]]; do
        if [[ `echo ${DAEMONS[$i]} | grep '^[^\!]' | wc -l` -eq 1 ]]; then
            /etc/rc.d/${DAEMONS[$i]#@} stop
        fi
        let i=i-1
    done
    # find any leftover daemons and shut them down
    if [ -d /var/run/daemons ]; then
        for daemon in `ls /var/run/daemons`; do
            /etc/rc.d/$daemon stop
        done
    fi
fi

# Terminate all processes
stat_busy "Sending SIGTERM To Processes"
/sbin/killall5 -15 &> /dev/null
/bin/sleep 5
stat_done

stat_busy "Sending SIGKILL To Processes"
/sbin/killall5 -9 &> /dev/null
/bin/sleep 1
stat_done

stat_busy "Saving Random Seed"
/bin/dd if=/dev/urandom of=/var/run/random-seed count=1 bs=512 2> /dev/null
stat_done

#stat_busy "Saving System Clock"
#if [ "$TIMEZONE" != "" -a -e /usr/share/zoneinfo/$TIMEZONE ]; then
#    /bin/rm -f /etc/localtime
#    /bin/cp /usr/share/zoneinfo/$TIMEZONE /etc/localtime
#fi
#if [ "$HARDWARECLOCK" = "UTC" ]; then
#    /sbin/hwclock --directisa --utc --systohc
#else
#    /sbin/hwclock --directisa --localtime --systohc
#fi
#stat_done

# removing psmouse module to fix some reboot issues on newer laptops
modprobe -r psmouse >/dev/null 2>&1

# Write to wtmp file before unmounting
/sbin/halt -w

############################# Deal with ejecting
# See if boot device still mounted and ejectable (CD/DVD)
ejectdev=$( df /.livesys/livecd 2>/dev/null | grep /dev | cut -d' ' -f1 )
bdev='-'
if [ -n "${ejectdev}" ]; then
        bdev=${ejectdev}
        if [ -n "$( echo "${ejectdev}" | grep "d[a-z][1-9]" )" ]; then
            # does not need to be ejected
            ejectdev='-'
        fi
else
    ejectdev='-'
fi

############################# Deal with session saving
savedev='-'
savepath=/.livesys/livecd
if [ -f /.livesys/scripts/session-save ]; then
    . /.livesys/scripts/session-save
elif grep "yes" /.livesys/livecd/save &>/dev/null && \
        ! [ -e /.livesys/nosave ]; then
    # Default is to save to the boot device
        mount -o remount,rw /.livesys/livecd
        savedev=${bdev}
fi

if [ "${savedev}" != "-" ]; then
    read -p "// Save session? [Y/n]: " ans
    if [ -z "$( echo ${ans} | grep '^ *[Nn]' )" ]; then
        if ! /larch/merge_overlay "${savepath}"; then
            savedev='-'
        fi
    else
        savedev='-'
    fi
fi

stat_busy "Deactivating Swap"
/sbin/swapoff -a
stat_done

stat_busy "Unmounting Filesystems"
/bin/umount -a -t noramfs,notmpfs,nosysfs,noproc 2> /dev/null
stat_done

# Kill non-root encrypted partition mappings
if [ -f /etc/crypttab -a -n "$(grep -v ^# /etc/crypttab | grep -v ^$)" ]; then
    stat_busy "Deactivating encrypted volumes:"
    CS=/sbin/cryptsetup.static
    do_uncrypt() {
        if [ $# -ge 3 ]; then
            stat_append "${1}.."
            $CS remove $1 >/dev/null 2>&1
            if [ $? -ne 0 ]; then
                stat_append "failed "
            else
                stat_append "ok "
            fi
        fi
    }
    while read line; do
        eval do_uncrypt "$line"
    done </etc/crypttab
    stat_done
fi

if [ "$USELVM" = "yes" -o "$USELVM" = "YES" ]; then
    if [ -x /sbin/lvm -a -d /sys/block ]; then
        stat_busy "Deactivating LVM2 groups"
        /sbin/lvm vgchange --ignorelockingfailure -an >/dev/null 2>&1
        stat_done
    fi
fi

cd /
exec /rc.shutdown2 "${savedev}" "${ejectdev}"
