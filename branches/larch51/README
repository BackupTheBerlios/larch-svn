This branch is for a simplified live-medium structure using a union-root.

Session saving on CD/DVD is dropped, but will be retained on USB-stick, in
a slightly modified form.


Basic session saving is now simply a matter of compressing the overlay layer
of the union. That should speed up session saving a bit. There is also a
second stage of session saving, more akin to the old version, where a
read-only (squashfs) layer between the main system and the top overlay
is rewritten, merging in the top overlay.

To further increase speed I am trying tar and lzop instead of squashfs for
the top overlay.

If the total overlay size gets big, there should be support for recreating
the live system (using larchify).


system.sqf: The main squashed system, mounted to union root in initramfs

overlay.ovl: The saved state of the writable union layer, unpacked in initramfs

mods.sqf: A union layer (between system and overlay). Can be updated by
          merging in overlay (needs old merge algorithm)? Doesn't contain
          /etc changes.


Building:
=========

Export from svn:
   svn export svn://svn.berlios.de/larch/trunk

Then go to the 'misc' directory and run 'mklarchpak'. This will create a
convenient packet from which larch can be run - after unpacking and running
larch-setup. It contains the larch package in the 'larchpacks' subdirectory,
which is needed for 'mklarch', but that package can also be installed with
'pacman -U'.


tar / lzo:
==========

Compress:
tar -cf - src | lzop > src.tar.lzo

Uncompress:
lzop -d < src.tar.lzo | tar -xf -

Could use lzf (liblzf) instead of lzo, but lzo may be slightly better?
lzf is much smaller, and easy to compile - can also use klcc.
Both seem a lot faster at compressing than squashfs or gzip (more than
twice as fast?), decompression is similar in all cases, but gzip may be
very slightly slower. squashfs looks better than gzip - smaller file,
slightly faster - but it may just be the settings. lzf/lzo lose a few
percent of compression (squashfs ~10% smaller?).
