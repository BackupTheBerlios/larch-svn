TODO
====

*) The aufs mount of 'mods' has been 'rr', which might be wrong - it should
  probably be 'ro+wh'. On the other hand, if my new ideas for merge_overlay
  work (see below), 'rr' would be right after all (but probably not with the
  old merge_overlay).

*) New init idea. Use custom /etc/inittab which uses /etc/rc.larchinit and
  /etc/rc.larchshutdown instead of /etc/rc.sysinit and /etc/rc.shutdown,
  thus eliminating the need for arch0.tar.gz (hopefully). Only /etc/inittab
  would need replacement on installation (either from the version in system
  or from /etc/inittab.pacnew or as a separate installer file).
   /etc/rc.larchinit and /etc/rc.larchshutdown would be in the larch-live
  package.
   Would I need to add NoUpgrade etc/inittab to my pacman.conf?

*) Do I need to customize the pacman.conf in larch live system? On
  installation too?

*) larchify should not use /etc/initab from a live system (i.e. if rebuilding
  a live system) in building its system.sqf. (Is this only true if using
  the system version of this file for hard-disk installation purposes?)
   Could inittab be replaced for the duration of the squashing?

*) Try to avoid copying the unwanted bits of /var when doing the copy phase
  of merging (if indeed there is a copy phase - see my latest idea).
   ? - add extra aufs layer with whiteouts in appropriate places to cover
  up the directories?
   ? - special copy handler for var?
   ? - rsync instead of cp?
   ? - just delete the directories?

*) Interesting idea for overlay handling. Keep 'mods' as non-whiteout layer,
  so that whiteouts only appear in 'overlay'. This would solve the above
  problem with unwanted 'var' directories - one would just need to use
  the 'exclude' feature of mksquashfs (but consider how to handle the files
  in /var/log that actually should be retained).
   This would also allow 'mods' to be rebuilt without copying! Just using
  a new union of the two upper branches. Then the overlay branch would need
  to be scanned for still valid whiteouts (maybe they would all still be
  valid?), in order to create the new 'overlay' file.
   In this case, 'mods' would still be mounted 'rr' in the new merge aufs,
  but 'overlay' would be mounted 'ro+wh'.

   At present, buildlive puts nothing in system for these directories, but
  the /var/log minimal skeleton is recreated in 'mods', so possibly delete
  and recreate is the simplest solution here, or else an extra aufs layer
  for the recreation stage.

   It might also be worth reconsidering how /var is handled in general,
  given its special status for pacman.

*) What about saving a session during normal operation, not only at shutdown?

*) Separate out the initramfs generation from buildlive, so that it can also
  be used on the running live system.

*) Detect kernel updates and rebuild corresponding parts of boot medium
  (offer to rebuild boot cd?). Requires implementation of previous item,
  so that the initramfs can be rebuilt.

*) When creating new overlays name them first (say) mods.tmp and overlay.tmp
  so that if an error occurs (a crash, power off, ...) the next boot attempt
  will not be disturbed by unfinished or corrupted overlays.
   The boot process should also delete any such files it finds.
   When both files have been successfully created, they can be renamed.
