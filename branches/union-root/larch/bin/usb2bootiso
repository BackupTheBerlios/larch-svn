#!/bin/sh

# Build a bootable larch iso for booting from a (syslinux) larch
# USB-stick on computers which can't do this otherwise.
# The USB-stick must be mounted and this mount point given as argument
# to the script.

# This script must be run from its standard location so that it can find
# a fresh isolinux.bin (from syslinux)
# The iso will be created in the current directory

APP="$( basename $0 )"
# Get path to larch base directory, via the location of this script
FULLPATH="$( readlink -f $0 )"
SCRIPTDIR="$( dirname ${FULLPATH} )"
LARCHDATA="$( dirname ${SCRIPTDIR} )/share/larch"

mkiso ()
{
    mkisofs -r -l $1 \
        -no-emul-boot -boot-load-size 4 -boot-info-table \
        -input-charset=UTF-8 \
        -publisher "designed by gradgrind, licence: GPL" \
        -A "larch-4" \
        -o "bootcd.iso" "${CDDATA}"

    if [ $? -eq 0 ]; then
        echo "// Your ISO has been created as bootcd.iso"
    else
        echo "ERROR: iso build failed" 1>&2
        return 1
    fi
}

if [ -z "$1" ] || [ ! -d $1 ]; then
    echo "Source directory (mounted USB-stick)?"
    exit 1
fi

MP=$1

CDDATA=$( pwd )/bootcd
rm -rf ${CDDATA}
mkdir -p ${CDDATA}/isolinux

if ! cp ${LARCHDATA}/syslinux/isolinux.bin ${CDDATA}/isolinux; then
    echo "Couldn't find isolinux.bin"
    exit 1
fi
if ! cp ${MP}/vmlinuz ${CDDATA}/isolinux &>/dev/null; then
    echo "No kernel (vmlinuz)"
    exit 1
fi
if ! cp ${MP}/larch.img ${CDDATA}/isolinux &>/dev/null; then
    echo "No initramfs (larch.img)"
    exit 1
fi

cp ${MP}/vesamenu.c32 ${CDDATA}/isolinux
cp ${MP}/bkgd.jpg ${CDDATA}/isolinux
cp ${MP}/memtest ${CDDATA}/isolinux
cp ${MP}/kconfig ${CDDATA}/isolinux
cp ${MP}/syslinux.cfg ${CDDATA}/isolinux/isolinux.cfg

mkiso "-b isolinux/isolinux.bin -c isolinux/isolinux.boot"

